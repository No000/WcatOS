* SMBIOSに関して

* 仕様書に関して
  私が使用しているQemuが2.8、実機であるX230が2.7であるため、3.x系の出力には現状対応させておりません。
  また、2.xと3.xの間には使用の違いが存在しているので注意が必要です。

* アクセスの方法
  EDK2で開発を行うことを前提とした説明となります。（もし自前で構造を用意したい場
  合はEDK2のincludeした先のヘッダーファイルを見ればわかるかと思います。）

** SMBIOSのエントリーテーブル
   #+begin_src C
#include <Guid/SmBios.h>            /* SMBIOS */
   #+end_src
   このヘッダーをインクルードします。このヘッダーファイルにSMBIOSのGUIDが入っており
   SMBIOS_TABLE_GUIDというマクロで存在します。

   そこへ以下のコードを用いて、tableを発見します。
   #+begin_src C
void *find_efi_smbios_table(void) {
    EFI_GUID efi_smbios_table = SMBIOS_TABLE_GUID;
    /* const EFI_GUID efi_smbios = SMBIOS_TABLE_GUID; */
    unsigned long long i;
    for (i = 0; i < ST->NumberOfTableEntries; i++) {
        EFI_GUID *guid = &gST->ConfigurationTable[i].VendorGuid;
        if ((guid->Data1 == efi_smbios_table.Data1) &&
            (guid->Data2 == efi_smbios_table.Data2) &&
            (guid->Data3 == efi_smbios_table.Data3)) {
            unsigned char is_equal = TRUE;
            unsigned char j;
            for (j = 0; j < 8; j++) {
                if (guid->Data4[j] != efi_smbios_table.Data4[j])
                    is_equal = FALSE;
            }
            if (is_equal == TRUE)
                return gST->ConfigurationTable[i].VendorTable;
        }
    }
    return NULL;
}
   #+end_src
   この関数の返り値にエントリテーブルのアドレスが乗っています。

   エントリーテーブルの内容は以下のようになっています。

** 構造体の見つけ方と構造体から文字列を参照する方法
   EDK2におけるsmbiosviewコマンドのソースコードが参考となる。以下の関数が２つの機能を持った関数である。
   #+begin_src C
CHAR8 *
LibGetSmbiosString (
                    IN  SMBIOS_STRUCTURE_POINTER    *Smbios,
                    IN  UINT16                      StringNumber
                    )
/*++
  Routine Description:
  Return SMBIOS string given the string number.
  Arguments:
  Smbios       - Pointer to SMBIOS structure
  StringNumber - String number to return. -1 is used to skip all strings and 
  point to the next SMBIOS structure.
  Returns:
  Pointer to string, or pointer to next SMBIOS strcuture if StringNumber == -1
  --*/
{
    UINT16  Index;
    CHAR8   *String;
 

    //
    // Skip over formatted section
    //
    String = (CHAR8 *) (Smbios->Raw + Smbios->Hdr->Length);

    //
    // Look through unformated section
    //
    for (Index = 1; Index <= StringNumber; Index++) {
        if (StringNumber == Index) {
            return String;
        }
        //
        // Skip string
        //
        for (; *String != 0; String++);
        String++;

        if (*String == 0) {
            //
            // If double NULL then we are done.
            //  Retrun pointer to next structure in Smbios.
            //  if you pass in a -1 you will always get here
            //
            Smbios->Raw = (UINT8 *)++String;
            return NULL;
        }
    }

    return NULL;
}
   #+end_src

** 気をつけること
   EDK2においてTypeの配列はunion(共用体)となっています。これは、typeが機種によって
   は存在しないTypeがあったり、0から小さい順に並んでいるとは限らないからです。（ベン
   ダが新しいデータをSMBIOSに追加する場合Type1でも最後に追記することが指定されてい
   る。）

